//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeniorMVC.NashClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserModel", Namespace="http://schemas.datacontract.org/2004/07/SeniorDBServer")]
    [System.SerializableAttribute()]
    public partial class UserModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char AdminFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char AdminFlag {
            get {
                return this.AdminFlagField;
            }
            set {
                if ((this.AdminFlagField.Equals(value) != true)) {
                    this.AdminFlagField = value;
                    this.RaisePropertyChanged("AdminFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NashClient.INsashServices")]
    public interface INsashServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/NPlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/NPlayerWrapperResponse")]
        string[] NPlayerWrapper();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/NPlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/NPlayerWrapperResponse")]
        System.Threading.Tasks.Task<string[]> NPlayerWrapperAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Two_PlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/Two_PlayerWrapperResponse")]
        int[] Two_PlayerWrapper();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Two_PlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/Two_PlayerWrapperResponse")]
        System.Threading.Tasks.Task<int[]> Two_PlayerWrapperAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Three_PlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/Three_PlayerWrapperResponse")]
        int[] Three_PlayerWrapper();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Three_PlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/Three_PlayerWrapperResponse")]
        System.Threading.Tasks.Task<int[]> Three_PlayerWrapperAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/SignIn", ReplyAction="http://tempuri.org/INsashServices/SignInResponse")]
        SeniorMVC.NashClient.UserModel SignIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/SignIn", ReplyAction="http://tempuri.org/INsashServices/SignInResponse")]
        System.Threading.Tasks.Task<SeniorMVC.NashClient.UserModel> SignInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Register", ReplyAction="http://tempuri.org/INsashServices/RegisterResponse")]
        string Register(SeniorMVC.NashClient.UserModel usermodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Register", ReplyAction="http://tempuri.org/INsashServices/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(SeniorMVC.NashClient.UserModel usermodel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INsashServicesChannel : SeniorMVC.NashClient.INsashServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NsashServicesClient : System.ServiceModel.ClientBase<SeniorMVC.NashClient.INsashServices>, SeniorMVC.NashClient.INsashServices {
        
        public NsashServicesClient() {
        }
        
        public NsashServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NsashServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NsashServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NsashServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] NPlayerWrapper() {
            return base.Channel.NPlayerWrapper();
        }
        
        public System.Threading.Tasks.Task<string[]> NPlayerWrapperAsync() {
            return base.Channel.NPlayerWrapperAsync();
        }
        
        public int[] Two_PlayerWrapper() {
            return base.Channel.Two_PlayerWrapper();
        }
        
        public System.Threading.Tasks.Task<int[]> Two_PlayerWrapperAsync() {
            return base.Channel.Two_PlayerWrapperAsync();
        }
        
        public int[] Three_PlayerWrapper() {
            return base.Channel.Three_PlayerWrapper();
        }
        
        public System.Threading.Tasks.Task<int[]> Three_PlayerWrapperAsync() {
            return base.Channel.Three_PlayerWrapperAsync();
        }
        
        public SeniorMVC.NashClient.UserModel SignIn(string username, string password) {
            return base.Channel.SignIn(username, password);
        }
        
        public System.Threading.Tasks.Task<SeniorMVC.NashClient.UserModel> SignInAsync(string username, string password) {
            return base.Channel.SignInAsync(username, password);
        }
        
        public string Register(SeniorMVC.NashClient.UserModel usermodel) {
            return base.Channel.Register(usermodel);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(SeniorMVC.NashClient.UserModel usermodel) {
            return base.Channel.RegisterAsync(usermodel);
        }
    }
}
