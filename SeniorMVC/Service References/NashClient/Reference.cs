//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeniorMVC.NashClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameFrameModel", Namespace="http://schemas.datacontract.org/2004/07/SeniorDBServer")]
    [System.SerializableAttribute()]
    public partial class GameFrameModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxStrategiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinStrategiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPlayers {
            get {
                return this.MaxPlayersField;
            }
            set {
                if ((this.MaxPlayersField.Equals(value) != true)) {
                    this.MaxPlayersField = value;
                    this.RaisePropertyChanged("MaxPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxStrategies {
            get {
                return this.MaxStrategiesField;
            }
            set {
                if ((this.MaxStrategiesField.Equals(value) != true)) {
                    this.MaxStrategiesField = value;
                    this.RaisePropertyChanged("MaxStrategies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinPlayers {
            get {
                return this.MinPlayersField;
            }
            set {
                if ((this.MinPlayersField.Equals(value) != true)) {
                    this.MinPlayersField = value;
                    this.RaisePropertyChanged("MinPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinStrategies {
            get {
                return this.MinStrategiesField;
            }
            set {
                if ((this.MinStrategiesField.Equals(value) != true)) {
                    this.MinStrategiesField = value;
                    this.RaisePropertyChanged("MinStrategies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserModel", Namespace="http://schemas.datacontract.org/2004/07/SeniorDBServer")]
    [System.SerializableAttribute()]
    public partial class UserModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char AdminFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char AdminFlag {
            get {
                return this.AdminFlagField;
            }
            set {
                if ((this.AdminFlagField.Equals(value) != true)) {
                    this.AdminFlagField = value;
                    this.RaisePropertyChanged("AdminFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PF", Namespace="http://schemas.datacontract.org/2004/07/SeniorServer")]
    [System.SerializableAttribute()]
    public partial class PF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[][] CPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int orderInGameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string preferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] strategiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[][] CP {
            get {
                return this.CPField;
            }
            set {
                if ((object.ReferenceEquals(this.CPField, value) != true)) {
                    this.CPField = value;
                    this.RaisePropertyChanged("CP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GID {
            get {
                return this.GIDField;
            }
            set {
                if ((this.GIDField.Equals(value) != true)) {
                    this.GIDField = value;
                    this.RaisePropertyChanged("GID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int orderInGame {
            get {
                return this.orderInGameField;
            }
            set {
                if ((this.orderInGameField.Equals(value) != true)) {
                    this.orderInGameField = value;
                    this.RaisePropertyChanged("orderInGame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string preferences {
            get {
                return this.preferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.preferencesField, value) != true)) {
                    this.preferencesField = value;
                    this.RaisePropertyChanged("preferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] strategies {
            get {
                return this.strategiesField;
            }
            set {
                if ((object.ReferenceEquals(this.strategiesField, value) != true)) {
                    this.strategiesField = value;
                    this.RaisePropertyChanged("strategies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NE_Profile", Namespace="http://schemas.datacontract.org/2004/07/SeniorServer")]
    [System.SerializableAttribute()]
    public partial class NE_Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameFrame", Namespace="http://schemas.datacontract.org/2004/07/SeniorServer")]
    [System.SerializableAttribute()]
    public partial class GameFrame : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NashClient.INsashServices")]
    public interface INsashServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/NPlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/NPlayerWrapperResponse")]
        string[] NPlayerWrapper();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/NPlayerWrapper", ReplyAction="http://tempuri.org/INsashServices/NPlayerWrapperResponse")]
        System.Threading.Tasks.Task<string[]> NPlayerWrapperAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/DeleteGameFrame", ReplyAction="http://tempuri.org/INsashServices/DeleteGameFrameResponse")]
        string DeleteGameFrame(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/DeleteGameFrame", ReplyAction="http://tempuri.org/INsashServices/DeleteGameFrameResponse")]
        System.Threading.Tasks.Task<string> DeleteGameFrameAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/AddGameFrame", ReplyAction="http://tempuri.org/INsashServices/AddGameFrameResponse")]
        string AddGameFrame(SeniorMVC.NashClient.GameFrameModel gf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/AddGameFrame", ReplyAction="http://tempuri.org/INsashServices/AddGameFrameResponse")]
        System.Threading.Tasks.Task<string> AddGameFrameAsync(SeniorMVC.NashClient.GameFrameModel gf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/DisplayFreeGameFrames", ReplyAction="http://tempuri.org/INsashServices/DisplayFreeGameFramesResponse")]
        SeniorMVC.NashClient.GameFrameModel[] DisplayFreeGameFrames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/DisplayFreeGameFrames", ReplyAction="http://tempuri.org/INsashServices/DisplayFreeGameFramesResponse")]
        System.Threading.Tasks.Task<SeniorMVC.NashClient.GameFrameModel[]> DisplayFreeGameFramesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/EditGameFrame", ReplyAction="http://tempuri.org/INsashServices/EditGameFrameResponse")]
        string EditGameFrame(SeniorMVC.NashClient.GameFrameModel edited);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/EditGameFrame", ReplyAction="http://tempuri.org/INsashServices/EditGameFrameResponse")]
        System.Threading.Tasks.Task<string> EditGameFrameAsync(SeniorMVC.NashClient.GameFrameModel edited);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/SignIn", ReplyAction="http://tempuri.org/INsashServices/SignInResponse")]
        SeniorMVC.NashClient.UserModel SignIn(SeniorMVC.NashClient.UserModel s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/SignIn", ReplyAction="http://tempuri.org/INsashServices/SignInResponse")]
        System.Threading.Tasks.Task<SeniorMVC.NashClient.UserModel> SignInAsync(SeniorMVC.NashClient.UserModel s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Register", ReplyAction="http://tempuri.org/INsashServices/RegisterResponse")]
        string Register(SeniorMVC.NashClient.UserModel usermodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/Register", ReplyAction="http://tempuri.org/INsashServices/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(SeniorMVC.NashClient.UserModel usermodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/ChooseGame", ReplyAction="http://tempuri.org/INsashServices/ChooseGameResponse")]
        SeniorMVC.NashClient.GameFrameModel[] ChooseGame(int nop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/ChooseGame", ReplyAction="http://tempuri.org/INsashServices/ChooseGameResponse")]
        System.Threading.Tasks.Task<SeniorMVC.NashClient.GameFrameModel[]> ChooseGameAsync(int nop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/CheckGameStatus", ReplyAction="http://tempuri.org/INsashServices/CheckGameStatusResponse")]
        SeniorMVC.NashClient.PF CheckGameStatus(string desiredgame, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/CheckGameStatus", ReplyAction="http://tempuri.org/INsashServices/CheckGameStatusResponse")]
        System.Threading.Tasks.Task<SeniorMVC.NashClient.PF> CheckGameStatusAsync(string desiredgame, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/JoinGame", ReplyAction="http://tempuri.org/INsashServices/JoinGameResponse")]
        int JoinGame(string desiredgame, string username, string[] strategies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/JoinGame", ReplyAction="http://tempuri.org/INsashServices/JoinGameResponse")]
        System.Threading.Tasks.Task<int> JoinGameAsync(string desiredgame, string username, string[] strategies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/PreferencesGetter", ReplyAction="http://tempuri.org/INsashServices/PreferencesGetterResponse")]
        System.Collections.Generic.Dictionary<SeniorMVC.NashClient.NE_Profile, bool> PreferencesGetter(string preferences, string username, SeniorMVC.NashClient.NE_Profile[] Max_Payoff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/PreferencesGetter", ReplyAction="http://tempuri.org/INsashServices/PreferencesGetterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<SeniorMVC.NashClient.NE_Profile, bool>> PreferencesGetterAsync(string preferences, string username, SeniorMVC.NashClient.NE_Profile[] Max_Payoff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/PreferencesGetterNplayer", ReplyAction="http://tempuri.org/INsashServices/PreferencesGetterNplayerResponse")]
        SeniorMVC.NashClient.GameFrame PreferencesGetterNplayer(string preferences, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INsashServices/PreferencesGetterNplayer", ReplyAction="http://tempuri.org/INsashServices/PreferencesGetterNplayerResponse")]
        System.Threading.Tasks.Task<SeniorMVC.NashClient.GameFrame> PreferencesGetterNplayerAsync(string preferences, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INsashServicesChannel : SeniorMVC.NashClient.INsashServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NsashServicesClient : System.ServiceModel.ClientBase<SeniorMVC.NashClient.INsashServices>, SeniorMVC.NashClient.INsashServices {
        
        public NsashServicesClient() {
        }
        
        public NsashServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NsashServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NsashServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NsashServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] NPlayerWrapper() {
            return base.Channel.NPlayerWrapper();
        }
        
        public System.Threading.Tasks.Task<string[]> NPlayerWrapperAsync() {
            return base.Channel.NPlayerWrapperAsync();
        }
        
        public string DeleteGameFrame(string title) {
            return base.Channel.DeleteGameFrame(title);
        }
        
        public System.Threading.Tasks.Task<string> DeleteGameFrameAsync(string title) {
            return base.Channel.DeleteGameFrameAsync(title);
        }
        
        public string AddGameFrame(SeniorMVC.NashClient.GameFrameModel gf) {
            return base.Channel.AddGameFrame(gf);
        }
        
        public System.Threading.Tasks.Task<string> AddGameFrameAsync(SeniorMVC.NashClient.GameFrameModel gf) {
            return base.Channel.AddGameFrameAsync(gf);
        }
        
        public SeniorMVC.NashClient.GameFrameModel[] DisplayFreeGameFrames() {
            return base.Channel.DisplayFreeGameFrames();
        }
        
        public System.Threading.Tasks.Task<SeniorMVC.NashClient.GameFrameModel[]> DisplayFreeGameFramesAsync() {
            return base.Channel.DisplayFreeGameFramesAsync();
        }
        
        public string EditGameFrame(SeniorMVC.NashClient.GameFrameModel edited) {
            return base.Channel.EditGameFrame(edited);
        }
        
        public System.Threading.Tasks.Task<string> EditGameFrameAsync(SeniorMVC.NashClient.GameFrameModel edited) {
            return base.Channel.EditGameFrameAsync(edited);
        }
        
        public SeniorMVC.NashClient.UserModel SignIn(SeniorMVC.NashClient.UserModel s) {
            return base.Channel.SignIn(s);
        }
        
        public System.Threading.Tasks.Task<SeniorMVC.NashClient.UserModel> SignInAsync(SeniorMVC.NashClient.UserModel s) {
            return base.Channel.SignInAsync(s);
        }
        
        public string Register(SeniorMVC.NashClient.UserModel usermodel) {
            return base.Channel.Register(usermodel);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(SeniorMVC.NashClient.UserModel usermodel) {
            return base.Channel.RegisterAsync(usermodel);
        }
        
        public SeniorMVC.NashClient.GameFrameModel[] ChooseGame(int nop) {
            return base.Channel.ChooseGame(nop);
        }
        
        public System.Threading.Tasks.Task<SeniorMVC.NashClient.GameFrameModel[]> ChooseGameAsync(int nop) {
            return base.Channel.ChooseGameAsync(nop);
        }
        
        public SeniorMVC.NashClient.PF CheckGameStatus(string desiredgame, string username) {
            return base.Channel.CheckGameStatus(desiredgame, username);
        }
        
        public System.Threading.Tasks.Task<SeniorMVC.NashClient.PF> CheckGameStatusAsync(string desiredgame, string username) {
            return base.Channel.CheckGameStatusAsync(desiredgame, username);
        }
        
        public int JoinGame(string desiredgame, string username, string[] strategies) {
            return base.Channel.JoinGame(desiredgame, username, strategies);
        }
        
        public System.Threading.Tasks.Task<int> JoinGameAsync(string desiredgame, string username, string[] strategies) {
            return base.Channel.JoinGameAsync(desiredgame, username, strategies);
        }
        
        public System.Collections.Generic.Dictionary<SeniorMVC.NashClient.NE_Profile, bool> PreferencesGetter(string preferences, string username, SeniorMVC.NashClient.NE_Profile[] Max_Payoff) {
            return base.Channel.PreferencesGetter(preferences, username, Max_Payoff);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<SeniorMVC.NashClient.NE_Profile, bool>> PreferencesGetterAsync(string preferences, string username, SeniorMVC.NashClient.NE_Profile[] Max_Payoff) {
            return base.Channel.PreferencesGetterAsync(preferences, username, Max_Payoff);
        }
        
        public SeniorMVC.NashClient.GameFrame PreferencesGetterNplayer(string preferences, string username) {
            return base.Channel.PreferencesGetterNplayer(preferences, username);
        }
        
        public System.Threading.Tasks.Task<SeniorMVC.NashClient.GameFrame> PreferencesGetterNplayerAsync(string preferences, string username) {
            return base.Channel.PreferencesGetterNplayerAsync(preferences, username);
        }
    }
}
